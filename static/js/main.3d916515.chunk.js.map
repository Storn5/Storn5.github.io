{"version":3,"sources":["components/SignUpForm.js","components/LoginForm.js","components/Header.js","components/LoginPage.js","components/WelcomeText.js","components/Checkbox.js","components/ProfileForm.js","components/ProfilePage.js","components/SendButton.js","components/RateButton.js","components/Movie.js","components/WatchedMoviesList.js","components/WatchedMoviesPage.js","components/FilmPage.js","components/history.js","components/RecommendationFilm.js","components/MovieList.js","components/IndexPage.js","App.js","index.js"],"names":["SignUpForm","props","handleUsernameChange","event","setState","username","target","value","handleEmailChange","email","handlePasswordChange","password","handleConfirmPasswordChange","re_password","handleBirthDateChange","birthDate","handleSubmit","state","alert","preventDefault","options","method","body","JSON","stringify","headers","fetch","then","res","status","json","onSubmit","this","type","onChange","name","className","placeholder","Component","LoginForm","data","localStorage","setItem","access","refresh","history","push","PropTypes","any","Header","href","LoginPage","id","WelcomeText","loaded","access_token","getItem","response","console","log","Checkbox","style","display","checked","isSelected","onCheckboxChange","htmlFor","text","GENRES","ProfileForm","handlePreferenceChange","changeEvent","prevState","preferences","confirmPassword","handleCurrentPasswordChange","currentPassword","handleDeletePasswordChange","deletePassword","handlePreferenceSubmit","preferenceSubmitEvent","selectedPreferences","Object","keys","filter","option","genre_preference","handleLogOutSubmit","removeItem","handleEmailSubmit","handlePasswordSubmit","new_password","re_new_password","current_password","handleDeleteProfile","reduce","Array","from","map","genre","forEach","preference","genreName","key","bind","ProfilePage","Button","onClick","buttonName","SendButton","RateButton","handleClick","isNaN","movie_rating","film","film_id","Movie","handleRatingChange","tmdb","loaded_tmdb","overview","link","width","height","src","poster_path","alt","title","loadTMDB","WatchedMovieList","get_films","film_ids","a","fetches","jsones","watched_list","Promise","all","responses","moviesOnPageAmount","films","length","desc","WatchedMoviesPage","WatchedMoviesList","FilmPage","handleAddToWatched","watched_films","add_options","isInWatched","handleDeleteFromWatched","indexOfFilm","indexOf","splice","Boolean","find","filmID","match","params","movie","counter","genresArray","buttonHandler","vote_average","release_date","runtime","createBrowserHistory","RecommendationFilm","min","max","Math","ceil","floor","random","image","MovieList","IndexPage","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d916515.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\n\r\nclass SignUpForm extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      username: '',\r\n      password: '',\r\n      re_password: '',\r\n    }\r\n  }\r\n  handleUsernameChange = event => {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n  handleEmailChange = event => {\r\n    this.setState({\r\n      email: event.target.value\r\n    })\r\n  }\r\n  handlePasswordChange = event => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n  }\r\n  handleConfirmPasswordChange = event => {\r\n    this.setState({\r\n      re_password: event.target.value\r\n    })\r\n  }\r\n  handleBirthDateChange = event => {\r\n    this.setState({\r\n      birthDate: event.target.value\r\n    })\r\n  }\r\n  handleSubmit = event => {\r\n    if (this.state.password == this.state.re_password) {\r\n      alert('Success! Authenticate me!');\r\n      event.preventDefault();\r\n      // Authenticate User\r\n      let options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(this.state),\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n      fetch('http://localhost:8000/api/v1/account/users/', options)\r\n        .then(res => {\r\n          if (res.status != 201){\r\n            alert(\"Something went wrong\");\r\n          }\r\n          //this.props.history.push(\"/login/\");\r\n          return res.json();\r\n        });\r\n    }\r\n    else {\r\n      alert('Error: Passwords do not match.');\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2><br /><br /><br />No Account? Create One!<br /><br /></h2>\r\n\t\t\t\t\t<form  onSubmit={this.handleSubmit} method=\"POST\">\r\n\t\t\t\t\t\t<input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} name=\"text\" className=\"form-control\" placeholder=\"Username\" />\r\n\t\t\t\t\t\t<input type=\"email\" value={this.state.email} onChange={this.handleEmailChange} name=\"email\" className=\"form-control\" placeholder=\"Email\" />\r\n\t\t\t\t\t\t<input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} name=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n\t\t\t\t\t\t<input type=\"password\" value={this.state.re_password} onChange={this.handleConfirmPasswordChange} name=\"re-password\" className=\"form-control\" placeholder=\"Confirm Password\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"tm-btn\">Sign Up</button>\r\n\t\t\t\t\t</form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default SignUpForm;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SignUpForm from \"./SignUpForm\";\r\n\r\nclass LoginForm extends Component{\r\n  static get propTypes() {\r\n    return {\r\n      history: PropTypes.any,\r\n    };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  handleUsernameChange = event => {\r\n    this.setState({\r\n      username: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePasswordChange = event => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    let options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    fetch('http://localhost:8000/api/v1/auth/login/', options)\r\n      .then(res => {\r\n        if (res.status != 200){\r\n          alert(\"Wrong credentials!\");\r\n          return false;\r\n        }\r\n        alert(\"Success! Logged in!\");\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          localStorage.setItem('jwt access', data.access);\r\n          localStorage.setItem('jwt refresh', data.refresh);\r\n          this.props.history.push(\"/profile/\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <header className=\"row tm-welcome-section\">\r\n          <h2 className=\"col-12 text-center tm-section-title\">Log In</h2>\r\n        </header>\r\n\r\n        <div className=\"tm-section\">\r\n          <form onSubmit={this.handleSubmit} method=\"POST\">\r\n            <input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange} name=\"text\" className=\"form-control\" placeholder=\"Username\" />\r\n            <input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} name=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n            <button type=\"submit\" className=\"tm-btn\">Log In</button>\r\n          </form>\r\n          <SignUpForm history={this.props.history} />\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\n\r\n\r\n\r\nclass Header extends Component{\r\n  render() {\r\n    return (\r\n      <div className=\"tm-header\">\r\n\t\t\t\t<div className=\"row-reverse tm-header-inner\">\r\n\t\t\t\t\t<div className=\"col-md-6 col-12\">\r\n\t\t\t\t\t\t<div className=\"tm-site-text-box\">\r\n\t\t\t\t\t\t\t<h1 className=\"tm-site-title\">ConTip</h1>\r\n\t\t\t\t\t\t\t<h6 className=\"tm-site-description\">Content recommender for optimal free time experience</h6>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<nav className=\"col-md-6 col-12 tm-nav\">\r\n\t\t\t\t\t\t<ul className=\"tm-nav-ul\">\r\n\t\t\t\t\t\t\t<li className=\"tm-nav-li\"><a href=\"/\" className=\"tm-nav-link\">Home</a></li>\r\n\t\t\t\t\t\t\t<li className=\"tm-nav-li\"><a href=\"/profile/\" className=\"tm-nav-link\">Profile</a></li>\r\n\t\t\t\t\t\t\t<li className=\"tm-nav-li\"><a href=\"/search/\" className=\"tm-nav-link\">Search</a></li>\r\n\t\t\t\t\t\t\t<li className=\"tm-nav-li\"><a href=\"/watched/\" className=\"tm-nav-link\">Watched</a></li>\r\n\t\t\t\t\t\t\t<li className=\"tm-nav-li\"><a href=\"/login/\" className=\"tm-nav-link\">Login</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport Header from \"./Header\";\r\n\r\nclass LoginPage extends Component{\r\n  static get propTypes() {\r\n    return {\r\n      history: PropTypes.any,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"wrapper\" className=\"container\">\r\n        <Header history={this.props.history} />\r\n        <LoginForm history={this.props.history} />\r\n        <br /><br /><br />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default LoginPage;","import React, { Component } from \"react\";\r\n\r\nclass WelcomeText extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tloaded: false,\r\n\t\t\tplaceholder: \"Loading\"\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst access_token = localStorage.getItem('jwt access');\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': `JWT ${access_token}`\r\n            }\r\n        }\r\n\t\tfetch(\"http://localhost:8000/api/v1/account/users/me/\", options)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tif (response.status > 400) {\r\n\t\t\t\t\treturn this.setState(() => {\r\n\t\t\t\t\t\treturn { placeholder: \"Something went wrong!\" };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tthis.setState(() => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\tloaded: true\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Welcome, {this.state.data.username}!</h2>\r\n\t\t\t\t<p>Email: {this.state.data.email}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WelcomeText;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n  static get propTypes() {\r\n    return {\r\n      id: PropTypes.any,\r\n      onCheckboxChange: PropTypes.any,\r\n      name: PropTypes.any,\r\n      isSelected: PropTypes.any,\r\n      text: PropTypes.any\r\n    };\r\n  }\r\n  render() {\r\n    return(\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <input\r\n          id={ this.props.id }\r\n          type=\"checkbox\"\r\n          name={ this.props.name }\r\n          checked={ this.props.isSelected }\r\n          onChange={ this.props.onCheckboxChange } />\r\n        <label htmlFor={ this.props.id }>{ this.props.text }</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkbox;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport WelcomeText from \"./WelcomeText\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nlet GENRES = [];\r\n\r\nclass ProfileForm extends Component{\r\n  static get propTypes() {\r\n    return {\r\n      history: PropTypes.any,\r\n    };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      deletePassword: '',\r\n      data: [],\r\n      loaded: false,\r\n      placeholder: \"Loading\",\r\n\r\n      preferences: GENRES.reduce(\r\n        (options, option) => ({\r\n          ...options,\r\n          [option]: false,\r\n        }),\r\n        {}\r\n      ),\r\n    };\r\n  }\r\n\r\n  handlePreferenceChange = changeEvent => {\r\n    const { name } = changeEvent.target;\r\n\r\n    this.setState(prevState => ({\r\n      preferences: {\r\n      ...prevState.preferences,\r\n      [name]: !prevState.preferences[name],\r\n      },\r\n    }));\r\n  }\r\n\r\n  handleEmailChange = event => {\r\n    this.setState({\r\n      email: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePasswordChange = event => {\r\n    this.setState({\r\n      password: event.target.value\r\n    })\r\n  }\r\n\r\n  handleConfirmPasswordChange = event => {\r\n    this.setState({\r\n      confirmPassword: event.target.value\r\n    })\r\n  }\r\n\r\n  handleCurrentPasswordChange = event => {\r\n    this.setState({\r\n      currentPassword: event.target.value\r\n    })\r\n  }\r\n\r\n  handleDeletePasswordChange = event => {\r\n    this.setState({\r\n      deletePassword: event.target.value\r\n    })\r\n  }\r\n\r\n  handlePreferenceSubmit = (preferenceSubmitEvent) => {\r\n    preferenceSubmitEvent.preventDefault();\r\n\r\n    const selectedPreferences = (Object\r\n      .keys(this.state.preferences)\r\n      .filter(option => this.state.preferences[option])\r\n    );\r\n\r\n    console.log(`selectedPreferences: ${selectedPreferences}`);\r\n\r\n    // Update user genres\r\n    const access_token = localStorage.getItem('jwt access');\r\n    let options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({ genre_preference: selectedPreferences }),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    'Authorization': `JWT ${ access_token }`\r\n      }\r\n    }\r\n    fetch('http://localhost:8000/api/v1/app/preferences/set/', options)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status != 200){\r\n          alert(\"Something went wrong\");\r\n\r\n        }\r\n        else {\r\n          this.props.history.push(\"/profile/\");\r\n          alert(\"Preferences changed successfully!\");\r\n        }\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  handleLogOutSubmit = event => {\r\n    event.preventDefault();\r\n    localStorage.removeItem('jwt access');\r\n    localStorage.removeItem('jwt refresh')\r\n    this.props.history.push(\"/login/\");\r\n  }\r\n\r\n  handleEmailSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Update user email\r\n  const access_token = localStorage.getItem('jwt access');\r\n    let options = {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify({ email: this.state.email }),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    'Authorization': `JWT ${ access_token }`\r\n      }\r\n    }\r\n    fetch('http://localhost:8000/api/v1/account/users/me/', options)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status != 200){\r\n          alert(\"Something went wrong\");\r\n        }\r\n        else {\r\n          this.props.history.push(\"/profile/\");\r\n          alert(\"Email changed successfully!\");\r\n        }\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  handlePasswordSubmit = (event) => {\r\n    if (this.state.password == this.state.confirmPassword) {\r\n      event.preventDefault();\r\n      // Update user password\r\n      const access_token = localStorage.getItem('jwt access');\r\n      let options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ new_password: this.state.password, re_new_password: this.state.confirmPassword, current_password: this.state.currentPassword }),\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `JWT ${ access_token }`\r\n        }\r\n      }\r\n      fetch('http://localhost:8000/api/v1/account/users/set_password/', options)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.status != 204){\r\n            alert(\"Something went wrong\");\r\n          }\r\n          else {\r\n            this.props.history.push(\"/login/\");\r\n          }\r\n          return res.json();\r\n        });\r\n    }\r\n    else {\r\n      event.preventDefault();\r\n      alert(\"Passwords do not match!\");\r\n    }\r\n  }\r\n\r\n  handleDeleteProfile = () => {\r\n    alert(\"Profile deletion request submitted!\");\r\n    // Delete user\r\n    const access_token = localStorage.getItem('jwt access');\r\n    let options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify({ current_password: this.state.deletePassword }),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `JWT ${ access_token }`\r\n      }\r\n    }\r\n    fetch('http://localhost:8000/api/v1/account/users/me/', options)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status != 204){\r\n          alert(\"Something went wrong\");\r\n        }\r\n        else {\r\n          this.props.history.push(\"/signup/\");\r\n        }\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n  const access_token = localStorage.getItem('jwt access');\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `JWT ${ access_token }`\r\n      }\r\n    }\r\n\r\n    fetch(\"http://localhost:8000/api/v1/app/genre/list/\", options)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.status > 400) {\r\n          this.props.history.push(\"/login\");\r\n          return this.setState(() => {\r\n            return { placeholder: \"Something went wrong!\" };\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n\r\n        GENRES = Array.from(data.map(genre => genre.id));\r\n\r\n        this.setState(() => {\r\n          return {\r\n            data,\r\n            loaded: true\r\n          };\r\n        });\r\n      });\r\n    fetch(\"http://localhost:8000/api/v1/app/preferences/set/\", options)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response.status > 400) {\r\n          return this.setState(() => {\r\n            return { placeholder: \"Something went wrong!\" };\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(preferences => {\r\n        preferences = preferences.genre_preference;\r\n        \r\n        preferences.forEach(preference => {\r\n          this.setState(prevState => ({\r\n            preferences: {\r\n            ...prevState.preferences,\r\n            [preference]: !prevState.preferences[preference],\r\n            },\r\n          }));\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <main>\r\n\t\t\t\t<header className=\"row tm-welcome-section\">\r\n\t\t\t\t\t<h2 className=\"col-12 text-center tm-section-title\">My Profile</h2>\r\n\t\t\t\t\t<p className=\"col-12 text-center\">...where you can find or change info about your account.</p>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<div className=\"tm-section\">\r\n\t\t\t\t\t<WelcomeText />\r\n\t\t\t\t\t<h2>Change Profile<br /><br /></h2>\r\n\t\t\t\t\t<h3>Change Favorite Genres<br /><br /></h3>\r\n\t\t\t\t\t<form onSubmit={this.handlePreferenceSubmit} method=\"POST\">\r\n            {this.state.data.map(genre => {\r\n              let genreName = \"genre\" + genre.id;\r\n                return (\r\n                  <Checkbox key={genre.id}\r\n                    id={ genreName }\r\n                    name={ genre.id }\r\n                    text={ genre.name }\r\n                    isSelected={ this.state.preferences[genre.id] }\r\n                    onCheckboxChange={ this.handlePreferenceChange.bind(this) } />\r\n                );\r\n            })}\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"tm-btn\">Change</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<h3>Change Email<br /><br /></h3>\r\n\t\t\t\t\t<form onSubmit={this.handleEmailSubmit} method=\"POST\">\r\n\t\t\t\t\t\t<input type=\"email\" value={this.state.email} onChange={this.handleEmailChange} name=\"email\" className=\"form-control\" placeholder=\"New Email\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"tm-btn\">Change</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<h3>Change Password<br /><br /></h3>\r\n\t\t\t\t\t<form onSubmit={this.handlePasswordSubmit} method=\"POST\">\r\n\t\t\t\t\t\t<input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} name=\"password\" className=\"form-control\" placeholder=\"New Password\" />\r\n\t\t\t\t\t\t<input type=\"password\" value={this.state.confirmPassword} onChange={this.handleConfirmPasswordChange} name=\"re_password\" className=\"form-control\" placeholder=\"Confirm New Password\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"tm-btn\">Change</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<h3>Delete Account<br /><br /></h3>\r\n\t\t\t\t\t<form onSubmit={this.handleDeleteProfile} method=\"POST\">\r\n            <input type=\"password\" value={this.state.deletePassword} onChange={this.handleDeletePasswordChange} name=\"del_password\" className=\"form-control\" placeholder=\"Password\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"tm-btn\">Delete Account</button>\r\n\t\t\t\t\t</form>\r\n          <h3>Log Out<br /><br /></h3>\r\n          <form onSubmit={this.handleLogOutSubmit}>\r\n            <button type=\"submit\" className=\"tm-btn\">Log Out</button>\r\n          </form>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileForm;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from \"./Header\";\r\nimport ProfileForm from \"./ProfileForm\";\r\n\r\nclass ProfilePage extends Component{\r\n  static get propTypes() {\r\n    return {\r\n      history: PropTypes.any,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n\t\t\t<div id=\"wrapper\" className=\"container\">\r\n\t\t\t\t<Header />\r\n\t\t\t\t<ProfileForm history={this.props.history}/>\r\n        <br /><br /><br />\r\n\t\t\t</div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\n\r\nconst SendButton = (props) => {\r\n\treturn (\r\n    <Button id={ props.id } className={ props.className ? props.className : \"\" } buttonName={ props.buttonName } onSubmit={ props.onSubmit } />\r\n\t);\r\n}\r\n\r\nconst Button = (props) => {\r\n    const onClick = (event) => {\r\n        props.onSubmit(event);\r\n    };\r\n\r\n\tif (props.id === \"DeleteProfileButton\") {\r\n\t\treturn (\r\n\t\t\t<div className=\"col-6 col-12-medium\">\r\n\t\t\t\t<ul className=\"actions stacked\">\r\n\t\t\t\t\t{/* <li><a href=\"#\" className=\"button small fit\">Delete Account</a></li> */}\r\n\t\t\t\t\t<li id={ props.id }><a href=\"#\" className=\"button small fit\" onClick={ onClick } >{ props.buttonName }</a></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<button type=\"submit\" value=\"Submit\" className=\"tm-btn\" onClick={ onClick } >{ props.buttonName }</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SendButton;\r\n","import React, { Component } from \"react\";\r\nimport SendButton from \"./SendButton\";\r\n\r\n\r\n\r\nclass RateButton extends Component {\r\n\thandleClick = (event) => {\r\n\t\tif (isNaN(this.props.movie_rating)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse if (+this.props.movie_rating > 100 || +this.props.movie_rating < 0) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tevent.preventDefault();\r\n\t\t\t// Create movie rating\r\n\t\t\tconst access_token = localStorage.getItem('jwt access');\r\n\t\t\tlet options = {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: JSON.stringify({ film: this.props.film_id, value: this.props.movie_rating }),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'Authorization': `JWT ${ access_token }`\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetch('http://yyr3ll.pythonanywhere.com/api/v1/app/rating/create/', options)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\treturn res.json();\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n      <SendButton buttonName=\"Rate\" onSubmit={ this.handleClick } className={ this.props.className } />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RateButton;\r\n","import React, { Component } from \"react\";\r\nimport RateButton from \"./RateButton\";\r\n\r\n\r\nclass Movie extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmovie_rating: \"\",\r\n\t\t\ttmdb: [],\r\n\t\t\tloaded_tmdb: false,\r\n\t\t};\r\n\t}\r\n\r\n    handleRatingChange = event => {\r\n        this.setState({\r\n            movie_rating: event.target.value\r\n        });\r\n\t}\r\n\t\r\n\tloadTMDB() {\r\n\t\tconst access_token = localStorage.getItem('jwt access');\r\n\t\tconst options = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': `JWT ${access_token}`\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetch(`https://api.themoviedb.org/3/movie/${ this.props.tmdb }?api_key=18c2fd7db94f9e4300a4700ea19affb9`, options)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tif (response.status > 400) {\r\n\t\t\t\t\treturn this.setState(() => {\r\n\t\t\t\t\t\treturn { placeholder: \"Something went wrong!\" };\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(tmdb => {\r\n\t\t\t\tconsole.log(tmdb);\r\n\t\t\t\tthis.setState(() => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttmdb,\r\n\t\t\t\t\t\tloaded_tmdb: true\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet overview = <span></span>\r\n\r\n\t\tif (!this.state.loaded_tmdb) {\r\n\t\t\tthis.loadTMDB();\r\n\t\t} else {\r\n\t\t\toverview = this.state.tmdb.overview;\r\n\r\n\t\t\treturn (\r\n        <article id=\"film square\" className=\"title-card\">\r\n          <div className=\"col-xs-4\">\r\n            <div className=\"watchlist-row\">\r\n              <a className=\"no-border-btm\" href={ this.props.link }>\r\n                <div className=\"title-poster no-radius-right\">\r\n                  <img width=\"300\" height=\"450\" className=\"title-poster-img\" src={ \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + this.state.tmdb.poster_path } alt={ this.props.title }/>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-8 title-card-content\">\r\n            <h4 className=\"tm-gallery-title\">\r\n              <a className=\"no-border-btm\" href={ this.props.link }>\r\n                { this.props.title }\r\n              </a>\r\n            </h4>\r\n            <p className=\"tm-gallery-description\">\r\n              { overview }\r\n            </p>\r\n            <div className=\"title-card-content-bottom\">\r\n              <div id=\"text-input-field\" className=\"col-6 col-12-xsmall rating-input-field\">\r\n                <input type=\"text\" className=\"form-control\" name={`rating${ this.props.film_id }`} id={`rating${ this.props.film_id }`} value={ this.state.movie_rating } onChange={ this.handleRatingChange } placeholder=\"0-100 points\" />\r\n              </div>\r\n              <RateButton film_id={ this.props.film_id } movie_rating={ this.state.movie_rating } className=\"rating-button\" />\r\n            </div>\r\n          </div>\r\n        </article>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default Movie;\r\n","import React, { Component } from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nclass WatchedMovieList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loaded: false,\r\n            placeholder: \"Loading\"\r\n        };\r\n        // for (var i = 0; i <= 100; i++) {\r\n        //     this.setState(prevState => ({\r\n        //         movie_ratings: { ...prevState.movie_ratings, [i]: \"\" }\r\n        //     }));\r\n        // }\r\n    }\r\n\r\n    get_films = async (film_ids, options) => {\r\n\r\n        /* \r\n            Functions that makes get requests simultaneously and returns films data\r\n        */\r\n\r\n        let fetches = [];\r\n        let jsones = [];\r\n\r\n        let responses;\r\n        let data;\r\n\r\n        // GETTING RESPONSES\r\n        for (const id of film_ids.watched_list) {\r\n            fetches.push(fetch(`http://localhost:8000/api/v1/app/film/detail/${id}/`, options));\r\n            console.log(id);\r\n        }\r\n\r\n        try {\r\n            responses = await Promise.all(fetches);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        };\r\n\r\n        //\r\n        for (const response of responses) {\r\n            jsones.push(response.json());\r\n        }\r\n\r\n        try {\r\n            data = await Promise.all(jsones);\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        };\r\n\r\n        return data;\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const access_token = localStorage.getItem('jwt access');\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${access_token}`\r\n            }\r\n        }\r\n\r\n        // GETTINGS FILM IDS\r\n        const response = await fetch(`http://localhost:8000/api/v1/app/watched/set/`, options);\r\n\r\n        // IF 401 THEN LOGIN\r\n        if (response.status === 401) {\r\n            this.props.history.push(\"/login\");\r\n            return this.setState(() => {\r\n                return { placeholder: \"Something went wrong!\" };\r\n            });\r\n        }\r\n\r\n        const film_ids = await response.json();\r\n\r\n        let data = await this.get_films(film_ids, options);\r\n\r\n        this.setState(() => {\r\n            return {\r\n                data,\r\n                loaded: true\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let moviesOnPageAmount = 0;\r\n        let films = <p></p>;\r\n        if (this.state && typeof (this.state.data) != 'undefined' && this.state.data.length > 0) {\r\n            films = this.state.data.map(film => {\r\n                if (moviesOnPageAmount < 12) {\r\n                    moviesOnPageAmount++;\r\n                    return (\r\n                        <Movie film_id={ film.id } tmdb={ film.tmdb } link={ `/film/${film.id}` } title={ film.title } desc='GET DESCRIPTION FROM IMDB' genre={film.genre.map(genre => { return (genre.name + '  ') })} />\r\n                    );\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <main>\r\n              <header className=\"row tm-welcome-section\">\r\n                <h2 className=\"col-12 text-center tm-section-title\">Watched Movies</h2>\r\n                <p className=\"col-12 text-center\">...where you can find a list of all the movies you have already watched.</p>\r\n              </header>\r\n              <div className=\"tm-section\">\r\n                { films }\r\n              </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchedMovieList;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport WatchedMoviesList from \"./WatchedMoviesList\";\r\n\r\n\r\nclass WatchedMoviesPage extends Component {\r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <Header />\r\n            <WatchedMoviesList history={this.props.history} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WatchedMoviesPage;","import React, { Component } from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport SendButton from \"./SendButton\";\r\n\r\nclass FilmPage extends Component{\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          data: [],\r\n          tmdb: [],\r\n          loaded: false,\r\n          loaded_tmdb: false,\r\n          placeholder: \"Loading\",\r\n          watched_films: [],\r\n          isInWatched: false,\r\n      };\r\n  }\r\n\r\n  handleAddToWatched = (event) => {\r\n\r\n      const access_token = localStorage.getItem('jwt access');\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${ access_token }`\r\n          }\r\n      }\r\n      fetch(`http://localhost:8000/api/v1/app/watched/set/`, options)\r\n          .then(response => {\r\n              if (response.status > 400) {\r\n                  //<Redirect to=\"/login\" />\r\n                  this.props.history.push(\"/login/\");\r\n                  return this.setState(() => {\r\n                      return { placeholder: \"Something went wrong!\" };\r\n                  });\r\n              }\r\n\r\n              return response.json();\r\n          })\r\n          .then(watched_films => {\r\n\r\n\r\n              watched_films.watched_list.push(this.state.data.id);\r\n\r\n              this.setState({ watched_films: watched_films.watched_list });\r\n\r\n              console.log(\"Modified list (for DEBUG ) \" + this.state.watched_films);\r\n              \r\n              const add_options = {\r\n                  method: \"PUT\",\r\n                  body: JSON.stringify({ \"watched_list\": watched_films.watched_list }),\r\n                  headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'Authorization': `JWT ${access_token}`\r\n                  }\r\n              }\r\n\r\n\r\n              fetch(`http://localhost:8000/api/v1/app/watched/set/`, add_options)\r\n                  .then(response => {\r\n                      console.log(response);\r\n                      this.isInWatched();\r\n                      return response.json();\r\n                  })\r\n          });\r\n\r\n  }\r\n\r\n  handleDeleteFromWatched = (event) => {\r\n\r\n      const access_token = localStorage.getItem('jwt access');\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${ access_token }`\r\n          }\r\n      }\r\n      fetch(`http://localhost:8000/api/v1/app/watched/set/`, options)\r\n          .then(response => {\r\n              if (response.status > 400) {\r\n                  //<Redirect to=\"/login\" />\r\n                  this.props.history.push(\"/login/\");\r\n                  return this.setState(() => {\r\n                      return { placeholder: \"Something went wrong!\" };\r\n                  });\r\n              }\r\n\r\n              return response.json();\r\n          })\r\n          .then(watched_films => {\r\n              const indexOfFilm = watched_films.watched_list.indexOf(this.state.data.id);\r\n\r\n              if (~indexOfFilm) {\r\n                  watched_films.watched_list.splice(indexOfFilm, 1);\r\n              }\r\n\r\n              this.setState({ watched_films: watched_films.watched_list });\r\n\r\n              console.log(\"Modified list (for DEBUG ) \" + this.state.watched_films);\r\n              \r\n              const add_options = {\r\n                  method: \"PUT\",\r\n                  body: JSON.stringify({ \"watched_list\": watched_films.watched_list }),\r\n                  headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json',\r\n                      'Authorization': `JWT ${access_token}`\r\n                  }\r\n              }\r\n\r\n\r\n              fetch(`http://localhost:8000/api/v1/app/watched/set/`, add_options)\r\n                  .then(response => {\r\n                      console.log(response);\r\n                      this.isInWatched();\r\n                      return response.json();\r\n                  })\r\n          });\r\n\r\n  }\r\n\r\n  isInWatched = () => {\r\n      const access_token = localStorage.getItem('jwt access');\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${ access_token }`\r\n          }\r\n      }\r\n      fetch(`http://localhost:8000/api/v1/app/watched/set/`, options)\r\n          .then(response => {\r\n              if (response.status > 400) {\r\n                  //<Redirect to=\"/login\" />\r\n                  this.props.history.push(\"/login/\");\r\n                  return this.setState(() => {\r\n                      return { placeholder: \"Something went wrong!\" };\r\n                  });\r\n              }\r\n\r\n              return response.json();\r\n          })\r\n          .then(watched_films => {\r\n              let isInWatched = Boolean(watched_films.watched_list.find(filmID => {\r\n                  return filmID == this.state.data.id;\r\n              }));\r\n\r\n              this.setState({\r\n                  isInWatched,\r\n              });\r\n          });\r\n  }\r\n\r\n  componentDidMount() {\r\n      const access_token = localStorage.getItem('jwt access');\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${access_token}`\r\n          }\r\n      }\r\n      fetch(`http://localhost:8000/api/v1/app/film/detail/${ this.props.match.params.id }`, options)\r\n          .then(response => {\r\n              console.log(response);\r\n              if (response.status > 400) {\r\n                  return this.setState(() => {\r\n                      return { placeholder: \"Something went wrong!\" };\r\n                  });\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(data => {\r\n              console.log(data);\r\n              this.isInWatched();\r\n              this.setState(() => {\r\n                  return {\r\n                      data,\r\n                      loaded: true\r\n                  };\r\n              });\r\n          });\r\n  }\r\n\r\n  loadTMDB() {\r\n      const access_token = localStorage.getItem('jwt access');\r\n      const options = {\r\n          method: \"GET\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `JWT ${access_token}`\r\n          }\r\n      }\r\n      fetch(`https://api.themoviedb.org/3/movie/${ this.state.data.tmdb }?api_key=18c2fd7db94f9e4300a4700ea19affb9`, options)\r\n          .then(response => {\r\n              console.log(response);\r\n              if (response.status > 400) {\r\n                  return this.setState(() => {\r\n                      return { placeholder: \"Something went wrong!\" };\r\n                  });\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(tmdb => {\r\n              console.log(tmdb);\r\n              this.setState(() => {\r\n                  return {\r\n                      tmdb,\r\n                      loaded_tmdb: true\r\n                  };\r\n              });\r\n          });\r\n  }\r\n\r\n  render() {\r\n      let movie = <h1>Film page</h1>\r\n\r\n      if (this.state && this.state.loaded && this.state.loaded_tmdb) {\r\n          let counter = 0;\r\n          let genresArray = this.state.data.genre;\r\n\r\n          let genres = genresArray.map(genre => {\r\n              counter += 1;\r\n              if (counter === genresArray.length) {\r\n                  return(\r\n                      <span>\r\n                          { genre.name }\r\n                      </span>\r\n                  );\r\n              } else {\r\n                  return(\r\n                      <span>\r\n                          { genre.name }\r\n                          <span>, </span>\r\n                      </span>\r\n                  );\r\n              }\r\n          });\r\n\r\n          let buttonName = \"Add to watched\";\r\n          let buttonHandler = this.handleAddToWatched;\r\n\r\n          if (this.state.isInWatched) {\r\n              buttonName = \"Remove from watched\";\r\n              buttonHandler = this.handleDeleteFromWatched;\r\n          }\r\n\r\n          movie = (\r\n            <div className=\"tm-section\">\r\n              <div className=\"col-sm-4 col-sm-pull-8\">\r\n                <div className=\"title-sidebar\">\r\n                  <aside>\r\n                    <div className=\"title-poster no-radius-btm\">\r\n                      <img width=\"300\" height=\"450\" src={ \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + this.state.tmdb.poster_path } alt={ this.state.data.title } />\r\n                    </div>\r\n                  </aside>\r\n                </div>\r\n                <div className=\"title-sidebar-button no-radius-top\">\r\n                  <SendButton buttonName={ buttonName } onSubmit={ buttonHandler } />\r\n                </div>\r\n              </div>\r\n              <h3 className=\"tm-movie-title\">{ this.state.data.title }</h3>\r\n              <h4 className=\"tm-gallery-title\">Description</h4>\r\n              <p className=\"tm-gallery-description\">{ this.state.tmdb.overview }</p>\r\n              <h4 className=\"tm-gallery-title\">Rating</h4>\r\n              <a className=\"no-border-btm\" href={ `https://www.themoviedb.org/movie/${ this.state.data.tmdb }` }>\r\n                <p className=\"tm-gallery-price\">{ this.state.tmdb.vote_average }</p>\r\n              </a>\r\n              <h4 className=\"tm-gallery-title\">Release date</h4>\r\n              <p className=\"tm-gallery-description\">{ this.state.tmdb.release_date }</p>\r\n              <h4 className=\"tm-gallery-title\">Runtime</h4>\r\n              <p className=\"tm-gallery-description\">{ `${ this.state.tmdb.runtime } minutes` }</p>\r\n            </div>\r\n          );\r\n            {/*\r\n              <div className=\"info-box\">\r\n                  <div className=\"info-box-container clearfix\">\r\n                      <div className=\"col-sm-8 col-sm-push-4\">\r\n                          <div className=\"title-block\">\r\n                              <h1>\r\n                                  { this.state.data.title }\r\n                              </h1>\r\n                          </div>\r\n                          <div className=\"detail-infos\">\r\n                              <hr />\r\n                                  <div className=\"detail-infos-detail\">\r\n                                      <div className=\"clearfix\">\r\n                                          <div className=\"detail-infos-subheading label\">\r\n                                              Rating\r\n                                          </div>\r\n                                          <div className=\"detail-infos-detail-values\">\r\n                                              <div className=\"title-card-rating\">\r\n                                                  <a className=\"no-border-btm\" href={ `https://www.themoviedb.org/movie/${ this.state.data.tmdb }` }>\r\n                                                      <img src={ tmdb_logo } alt=\"tmdb logo\" />\r\n                                                      <span>{ this.state.tmdb.vote_average }</span>\r\n                                                  </a>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"clearfix\">\r\n                                          <div className=\"detail-infos-subheading label\">\r\n                                              Genres\r\n                                          </div>\r\n                                          <div className=\"detail-infos-detail-values\">\r\n                                              { genres }\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"clearfix\">\r\n                                          <div className=\"detail-infos-subheading label\">\r\n                                              Release date\r\n                                          </div>\r\n                                          <div className=\"detail-infos-detail-values\">\r\n                                              <span>{ this.state.tmdb.release_date }</span>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div className=\"clearfix\">\r\n                                          <div className=\"detail-infos-subheading label\">\r\n                                              Runtime\r\n                                          </div>\r\n                                          <div className=\"detail-infos-detail-values\">\r\n                                              <span>{ `${ this.state.tmdb.runtime } minutes` }</span>\r\n                                          </div>\r\n                                      </div>     \r\n                                  </div>\r\n                              <hr />\r\n                              <div>\r\n                                  <p className=\"detail-infos-subheading\">Synopsis</p>\r\n                                  <p className=\"text-wrap-pre-line\">\r\n                                      <span>\r\n                                          { this.state.tmdb.overview }\r\n                                      </span>\r\n                                  </p>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div className=\"col-sm-4 col-sm-pull-8\">\r\n                          <div className=\"title-sidebar\">\r\n                              <aside>\r\n                                  <div className=\"title-poster no-radius-btm\">\r\n                                      <img src={ \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + this.state.tmdb.poster_path } alt={ this.state.data.title } />\r\n                                  </div>\r\n                              </aside>\r\n                          </div>\r\n                          <div className=\"title-sidebar-button no-radius-top\">\r\n                              <SendButton buttonName={ buttonName } onSubmit={ buttonHandler } />\r\n                          </div>\r\n                      </div>\r\n                  </div> */}\r\n\r\n                  {/* <h1 id=\"main-film-title\">{ this.state.data.title }</h1>\r\n                  <span id=\"main-film-image\" className=\"image left\"><img src={ \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + this.state.tmdb.poster_path } alt={ this.state.data.title } /></span>\r\n                  <h3>Film description:</h3>\r\n                  <p id=\"film-description\">{ this.state.tmdb.overview }</p>\r\n                  <h3>Genres: </h3>\r\n                  <p>\r\n                      { this.state.data.genre.map(genre => { return(genre.name + \"  \") }) }\r\n                  </p>\r\n                  <h3>Release Date: </h3>\r\n                  <p>{ this.state.tmdb.release_date }</p>\r\n                  <h3>Runtime: </h3>\r\n                  <p>{ this.state.tmdb.runtime } minutes</p>\r\n                  <h3><a href={`https://www.imdb.com/title/tt0${ this.state.data.imdb }`}>IMDB Link</a></h3>\r\n                  <SendButton buttonName=\"Add to watched\" onSubmit={ this.handleAddToWatched } /> */}\r\n      }\r\n\r\n      if (this.state.loaded && !this.state.loaded_tmdb) {\r\n          this.loadTMDB();\r\n      }\r\n\r\n      return(\r\n        <div className=\"container\">\r\n          <Header />\r\n          <main>\r\n            <header className=\"row tm-welcome-section\">\r\n              <h2 className=\"col-12 text-center tm-section-title\">Movie Details</h2>\r\n              <p className=\"col-12 text-center\">...where you can find a detailed description of a particular film.</p>\r\n            </header>\r\n            {movie}\r\n          </main>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default FilmPage;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from \"react\";\r\n\r\nclass RecommendationFilm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tmdb: [],\r\n            loaded_tmdb: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns a random integer between min (inclusive) and max (inclusive).\r\n     * The value is no lower than min (or the next integer greater than min\r\n     * if min isn't an integer) and no greater than max (or the next integer\r\n     * lower than max if max isn't an integer).\r\n     * Using Math.round() will give you a non-uniform distribution!\r\n     */\r\n    getRandomInt(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    loadTMDB() {\r\n        const access_token = localStorage.getItem('jwt access');\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${ access_token }`,\r\n            }\r\n        }\r\n        fetch(`https://api.themoviedb.org/3/movie/${ this.props.tmdb }?api_key=18c2fd7db94f9e4300a4700ea19affb9`, options)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.status > 400) {\r\n                    return this.setState(() => {\r\n                        return { placeholder: \"Something went wrong!\" };\r\n                    });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(tmdb => {\r\n                console.log(tmdb);\r\n                this.setState(() => {\r\n                    return {\r\n                        tmdb,\r\n                        loaded_tmdb: true\r\n                    };\r\n                });\r\n            });\r\n    }\r\n\r\n\trender() {\r\n        let image = <img src=\"\" alt=\"\" />\r\n\r\n        if (this.state.loaded_tmdb) {\r\n            image = <img src={ \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\" + this.state.tmdb.poster_path } alt={ this.props.title } className=\"img-fluid tm-gallery-img\" />\r\n        }\r\n\r\n        if (!this.state.loaded_tmdb) {\r\n            this.loadTMDB();\r\n        }\r\n\r\n        return(\r\n            <article className=\"col-lg-3 col-md-4 col-sm-6 col-12 tm-gallery-item\">\r\n              <figure>\r\n\t\t\t\t\t\t\t\t<a href={ this.props.href }>{ image }</a>\r\n\t\t\t\t\t\t\t\t<figcaption>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"tm-gallery-title\">{ this.props.title }</h4>\r\n\t\t\t\t\t\t\t\t\t<p> Genre: {this.props.genre} </p>\r\n\t\t\t\t\t\t\t\t</figcaption>\r\n\t\t\t\t\t\t\t</figure>\r\n            </article>\r\n            /*\r\n              <span className=\"image\">\r\n                    { image }\r\n                </span>\r\n                <a href={ this.props.href }>\r\n                    <h2>{ this.props.title }</h2>\r\n                    <div className=\"content\">\r\n                        <p>Genre: { this.props.genre }</p>\r\n                    </div>\r\n                </a>\r\n            */\r\n        );\r\n    }\r\n}\r\nexport default RecommendationFilm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport RecommendationFilm from \"./RecommendationFilm\";\r\n\r\nclass MovieList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            loaded: false,\r\n            placeholder: \"Loading\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const access_token = localStorage.getItem('jwt access');\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${ access_token }`\r\n            }\r\n        }\r\n        fetch(`http://localhost:8000/api/v1/app/film/recommend/`, options)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.status > 400) {\r\n                    //<Redirect to=\"/login\" />\r\n                    this.props.history.push(\"/login/\");\r\n                    return this.setState(() => {\r\n                        return { placeholder: \"Something went wrong!\" };\r\n                    });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState(() => {\r\n                    return {\r\n                        data,\r\n                        loaded: true\r\n                    };\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let films = <p><strong>Loading your recommendations... Hang on...</strong></p>;\r\n        if (this.state.loaded && typeof(this.state.data) != 'undefined' && this.state.data.length > 0){\r\n            films = this.state.data.map(film => {\r\n                return (\r\n                    <RecommendationFilm href={`/film/${ film.id }`} title={ film.title } key={ film.title } tmdb={ film.tmdb } image=\"https://avatarfiles.alphacoders.com/139/139764.jpg\" genre={film.genre.map(genre => {return(genre.name + '  ')})} />\r\n                );\r\n            })\r\n            return (\r\n              <div id=\"tm-gallery-page-movies\" className=\"tm-gallery-page\">\r\n                { films }\r\n              </div>\r\n            );\r\n        }\r\n        return (\r\n          <div id=\"tm-gallery-page-movies\" className=\"tm-gallery-page\">\r\n            { films }\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { Component } from \"react\";\r\nimport MovieList from \"./MovieList\";\r\nimport Header from \"./Header\";\r\n\r\nclass IndexPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <main>\r\n                    <header className=\"row tm-welcome-section\">\r\n                        <h2 className=\"col-12 text-center tm-section-title\">Specially For You...</h2>\r\n                        <p className=\"col-12 text-center\">...we sat down and watched thousands of movies, just to find some special ones that you should definitely check out this week.</p>\r\n                    </header>\r\n                    <div className=\"row tm-gallery\">\r\n                        <MovieList history={ this.props.history } key=\"movieList\"/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;\r\n","import React from 'react';\nimport './App.css';\nimport './style.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport WatchedMoviesPage from \"./components/WatchedMoviesPage\";\nimport FilmPage from \"./components/FilmPage\";\nimport history from './components/history';\nimport IndexPage from \"./components/IndexPage\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/login/\" component={LoginPage} />\n        <Route path=\"/profile/\" component={ProfilePage} />\n        <Route path=\"/watched/\" component={WatchedMoviesPage} />\n        <Route exact path=\"/\" component={IndexPage} />\n        <Route path=\"/film/:id\" component={FilmPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}